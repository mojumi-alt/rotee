on:
  push:
    tags:
      - 'v*'

name: Latest Release

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  lint:
    name: Lint files
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.23.2'
          check-latest: true
      - name: Generate
        run: go generate -v ./...
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  release:
    name: Create Release
    runs-on: 'ubuntu-latest'
    needs: lint
    strategy:
      matrix:
        goosarch:
          - 'linux/amd64'
          - 'linux/arm64'
          - 'windows/amd64'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '1.23.2'
          check-latest: true
      - name: Generate
        run: go generate -v ./...
      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -o ${{github.repository}}-linux-amd64 -v
          GOOS=linux GOARCH=arm64 go build -o ${{github.repository}}-linux-arm64 -v
          GOOS=windows GOARCH=amd64 go build -o ${{github.repository}}-windows-amd64 -v
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-NOTES.md"
          draft: true
          files: |
            ${{github.repository}}-linux-amd64
            ${{github.repository}}-linux-arm64
            ${{github.repository}}-windows-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}